module std.stream;

import std.error;

/**
 * Source of a stream of `T`. This data type represents the ability to request
 * a succession of values. As opposed to ranges, it is not possible to back up
 * your position in the stream.
 * Furthermore, if it is a reference type, you should not hold on to the returned
 * value past the next call to `get()`.
 * Returns `:else` if the end of the stream is reached.
 * Returns `Error` if an error happened.
 */
interface Source(T)
{
    (T | :else | fail Error) get();
}

/**
 * Sink for a stream of `T`. This data type represents the ability to dispatch
 * a succession of values.
 * Returns `Error` if an error happened.
 */
interface Sink(T)
{
    (void | fail Error) put(T);
}
