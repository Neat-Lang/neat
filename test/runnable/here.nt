module here;

macro import std.macro.assert;

import package(compiler).neat.base;

void main() {
    auto loc = __RANGE__;

    // fileId can only be resolved with -file-id-output info, so we can't test for it.
    assert(loc.from.row == 7 && loc.from.column == 15
        && loc.to.row == 7 && loc.to.column == 24);
    test;
}

void test(LocRange range = __RANGE__) {
    // But these are wrong!
    // As opposed to D, it uses the range of the *callee*, not the caller.
    // I'm not sure what to do about this though. It's doing the right thing,
    // just not the thing I wanted.
    assert(range.(from.(row == 15 && column == 27)
        && to.(row == 15 && column == 36)));
}
