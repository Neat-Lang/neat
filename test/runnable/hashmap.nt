module hashmap;

macro import std.macro.assert;

void main() {
    mut int[string] map;

    map["foo"] = 5;
    map["bar"] = 6;
    map["foo"] = 7;

    assert(map["foo"] == 7);
    assert(map["bar"] == 6);

    assert(map.has("bar"));
    assert(!map.has("baz"));

    {
        mut int calls;
        int deflt() { calls += 1; return 7; }
        assert(map.get("bar", deflt) == 6);
        assert(calls == 0);
        assert(map.get("baz", deflt) == 7);
        assert(calls == 1);
    }
    assert(map.keys == ["foo", "bar"]);
    assert(map.values == [7, 6]);
    map.remove("foo");
    assert(map.values == [6]);
    map.remove("bar");
    assert(map.values.empty);

    mut int[int] map2;
    map2[0] = 1;
    map2[1] = 1;
    assert(map2.has(0));
    map2.clear;
    assert(map2.keys.empty);
    assert(map2.values.empty);
}
