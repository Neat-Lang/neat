module casts;

macro import std.macro.assert;

void main() {
    {
        long l = 1;
        int i = cast(int) l;
        assert(i == 1);
    }
    {
        float f = 2.5f;
        int i = cast(int) f;
        assert(i == 2);
    }
    {
        int i = 5;
        int *ip = &i;
        void *vp = cast(void*) ip;
        int* ip2 = cast(int*) vp;
        assert(*ip2 == 5);
        *cast(int*) vp += 1;
        assert(*ip2 == 6);
    }
    {
        char ch = cast(char) 0xff;
        ubyte ub = cast(ubyte) 0xff;
        short s = cast(short) 0xffff;
        assert(cast(int) ch == 255);
        assert(cast(int) ub == 255);
        assert(cast(int) s == -1);
    }
}
